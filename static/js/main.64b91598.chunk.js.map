{"version":3,"sources":["components/search/search.component.jsx","components/button/button.component.jsx","App.js","components/table/table.component.jsx","components/loading/loading.component.jsx","api.js","utilities.js","index.js"],"names":["Search","this","input","focus","_this","_this$props","props","value","onChange","onSubmit","children","react_default","a","createElement","type","ref","el","React","Component","Button","onClick","_props$className","className","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","largeColumn","width","midColumn","smallColumn","Table","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","sortKey","isSortReverse","onSort","bind","assertThisInitialized","setState","onDismiss","_this$state","sortedList","reverseSortedList","style","table_component_Sort","activeSortKey","map","item","key","objectID","href","url","title","author","num_comments","points","button_component","Sort","_ref","sortClass","classNames","button-active","Loading","Api","DEFAULT_QUERY","DEFAULT_HPP","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","PARAM_HPP","endpoint","concat","App","results","searchKey","searchTerm","error","isLoading","needsToSearchTopStories","setSearchTopStories","fetchSearchTopStories","onSearchChange","onSearchSubmit","result","hits","page","prevState","oldHits","updatedHits","toConsumableArray","objectSpread","defineProperty","updateSearchTopStoriesState","fetch","response","json","_context","t0","event","target","preventDefault","id","_results$searchKey","filter","_this2","_this$state2","search_component","table_component","ButtonWithLoading","rest","objectWithoutProperties","loading_component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.64b91598.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./search.styles.css\";\r\n\r\nclass Search extends React.Component {\r\n\r\n  componentDidMount() {\r\n    if(this.input) {\r\n      this.input.focus(); //it triggers the focus when the app renders\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, onChange, onSubmit, children } = this.props;\r\n    \r\n    return (\r\n      <form onSubmit={ onSubmit }>\r\n        <input \r\n          type=\"text\" \r\n          value={value} \r\n          onChange={onChange}\r\n          ref={el => this.input = el} \r\n        />\r\n        <button type=\"submit\">\r\n          { children }\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./button.styles.css\";\r\n\r\nfunction Button(props) {\r\n  const { onClick, className = \"\", children } = props;\r\n\r\n  return (\r\n    <button onClick={onClick} className={className} type=\"button\">\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./components/search/search.component\";\r\nimport Table from \"./components/table/table.component\";\r\nimport Button from \"./components/button/button.component\";\r\nimport Loading from \"./components/loading/loading.component\";\r\nimport { Api } from \"./api\";\r\nimport { updateSearchTopStoriesState } from './utilities';\r\nimport \"./App.css\";\r\n\r\nconst endpoint = `${Api.PATH_BASE}${Api.PATH_SEARCH}?${Api.PARAM_SEARCH}`;\r\n\r\nclass App extends Component {\r\n  /**\r\n   * Mounting Process has 4 Lifecycle Methods:  \r\n   *  • constructor()\r\n      • getDerivedStateFromProps()\r\n      • render()\r\n      • componentDidMount()\r\n   * \r\n   */\r\n  constructor(props) { //called when the component gets initialized.\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: null,\r\n      searchKey: '', //need it to cache results\r\n      searchTerm: Api.DEFAULT_QUERY,\r\n      error: null,\r\n      isLoading: false,\r\n    };\r\n\r\n    //The binding step is necessary because class methods don’t automatically bind this to the class instance.\r\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\r\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\r\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\r\n    this.onDismiss = this.onDismiss.bind(this);\r\n  }\r\n\r\n  //check if it is the first search with the request \"key\" or we can use a \"cached search\"\r\n  needsToSearchTopStories(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setSearchTopStories(result) {\r\n    const { hits, page } = result;\r\n    this.setState(updateSearchTopStoriesState(hits, page));\r\n  }\r\n\r\n  async fetchSearchTopStories(searchTerm, page = 0) {\r\n\r\n    this.setState({ isLoading: true });\r\n    \r\n    /* axios(`${endpoint}${searchTerm}&${Api.PARAM_PAGE}${page}&${Api.PARAM_HPP}${Api.DEFAULT_HPP}`)\r\n    .then(result => this.setSearchTopStories(result.data))\r\n    .catch(error => this.setState({ error }));  */\r\n\r\n    try {\r\n      const response = await fetch(`${endpoint}${searchTerm}&${Api.PARAM_PAGE}${page}&${Api.PARAM_HPP}${Api.DEFAULT_HPP}`);\r\n      const result = await response.json();\r\n      this.setSearchTopStories(result);\r\n    } catch(error) {\r\n      this.setState({ error });\r\n    }\r\n     \r\n  }\r\n\r\n  componentDidMount() {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    this.fetchSearchTopStories(searchTerm);\r\n  }\r\n  \r\n  onSearchChange(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n  \r\n  onSearchSubmit(event) {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n\r\n    if(this.needsToSearchTopStories(searchTerm)) {\r\n      this.fetchSearchTopStories(searchTerm);\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDismiss(id) {\r\n    const { searchKey, results } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n\r\n    const updatedHits = hits.filter(item => item.objectID !== id);\r\n    //update the State using this.setState() class method\r\n    this.setState({\r\n      results: {\r\n        ...results,\r\n        [searchKey]: { hits: updatedHits, page }\r\n      }\r\n    });\r\n  }\r\n\r\n  /* \r\n    Each time the state or the props of a component changes, the render() method is\r\n    called. \r\n  */\r\n  render() {\r\n    const { searchTerm, results, searchKey, error, isLoading } = this.state; //ES6 Destructuring\r\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\r\n\r\n    return (\r\n      /**\r\n       * Attention:\r\n       * input, like textarea and select\r\n       * are called \"uncontrolled component\"\r\n       * In React we need to control them!\r\n       * so we use value={searchTerm}\r\n       */\r\n      <div className=\"page\">\r\n        <h1 className=\"page-title\">HKRNews</h1>\r\n        <div className=\"interactions\">\r\n          <Search \r\n            value={searchTerm} \r\n            onChange={this.onSearchChange}\r\n            onSubmit={this.onSearchSubmit}\r\n          >\r\n            Search\r\n          </Search>\r\n        </div>\r\n        \r\n\r\n        { \r\n          error\r\n          ? <div className=\"interactions\">\r\n              <p>Something went wrong fetching data. Sorry!</p>\r\n            </div>\r\n          : <Table \r\n              list={ list }\r\n              onDismiss={ this.onDismiss } \r\n            />\r\n         }\r\n\r\n\r\n        <div className=\"interactions\">\r\n           <ButtonWithLoading\r\n            isLoading={isLoading}\r\n            onClick={ () => this.fetchSearchTopStories(searchKey, page + 1) }\r\n          >\r\n            More\r\n           </ButtonWithLoading> \r\n        </div>  \r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n *This is a so called HOC Higher Order Component it takes a component as an input \r\n  and return a component as output. Based on isLoading State it will output \r\n  the Loading component or the More button (the input)  \r\n */\r\nconst withLoading = (Component) => ({ isLoading, ...rest }) => \r\n  isLoading \r\n    ? <Loading /> \r\n    : <Component { ...rest } />;\r\n\r\nconst ButtonWithLoading = withLoading(Button);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { sortBy } from \"lodash\";\r\nimport classNames from 'classnames';\r\nimport Button from \"../button/button.component\";\r\nimport \"./table.styles.css\";\r\n\r\nconst SORTS = {\r\n  NONE: list => list,\r\n  TITLE: list => sortBy(list, 'title'),\r\n  AUTHOR: list => sortBy(list, 'author'),\r\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\r\n  POINTS: list => sortBy(list, 'points').reverse(),\r\n};\r\n\r\nconst isSearched = searchTerm => item =>\r\n  item.title.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\nconst largeColumn = {\r\n  width: \"40%\"\r\n};\r\nconst midColumn = {\r\n  width: \"30%\"\r\n};\r\nconst smallColumn = {\r\n  width: \"10%\"\r\n};\r\n\r\nclass Table extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sortKey: 'NONE',\r\n      isSortReverse: false,\r\n    };\r\n\r\n    this.onSort = this.onSort.bind(this);\r\n  }\r\n\r\n  onSort(sortKey) {\r\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse });\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { list, onDismiss } = this.props;\r\n    const { sortKey, isSortReverse } = this.state;\r\n    const sortedList = SORTS[sortKey](list);\r\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\r\n    \r\n    return (\r\n      <div className=\"table\">\r\n        <div className=\"table-header\">\r\n          <span style={largeColumn}>\r\n            <Sort\r\n              sortKey={'TITLE'}\r\n              onSort={this.onSort}\r\n              activeSortKey={ sortKey }\r\n            >\r\n              Title\r\n            </Sort>\r\n          </span>\r\n          <span style={midColumn}>\r\n            <Sort\r\n              sortKey={'AUTHOR'}\r\n              onSort={this.onSort}\r\n              activeSortKey={ sortKey }\r\n            >\r\n              Author\r\n            </Sort>\r\n          </span>\r\n          <span style={smallColumn}>\r\n            <Sort\r\n              sortKey={'COMMENTS'}\r\n              onSort={this.onSort}\r\n              activeSortKey={ sortKey }\r\n            >\r\n              Comments\r\n            </Sort>\r\n          </span>\r\n          <span style={smallColumn}>\r\n            <Sort\r\n              sortKey={'POINTS'}\r\n              onSort={this.onSort}\r\n              activeSortKey={ sortKey }\r\n            >\r\n              Points\r\n            </Sort>\r\n          </span>\r\n          <span style={smallColumn}>\r\n            Archive\r\n          </span>\r\n        </div>\r\n        {reverseSortedList.map((item) => (\r\n          <div key={item.objectID} className=\"table-row\">\r\n            <span style={largeColumn}>\r\n              <a href={item.url}>{item.title}</a>\r\n            </span>\r\n            <span style={midColumn}>{item.author}</span>\r\n            <span style={smallColumn}>{item.num_comments}</span>\r\n            <span style={smallColumn}>{item.points}</span>\r\n            <span style={smallColumn}>\r\n              <Button\r\n                className=\"button-inline\"\r\n                onClick={() => onDismiss(item.objectID)}\r\n                type=\"button\"\r\n              >\r\n                Dismiss\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n  }\r\n  \r\n\r\n}\r\n\r\nconst Sort = ({ sortKey, activeSortKey, onSort, children }) => {\r\n  \r\n  const sortClass = classNames(\r\n    'button-inline',\r\n    {'button-active': sortKey === activeSortKey}\r\n  );\r\n  \r\n  return(\r\n    <Button \r\n      onClick={() => onSort(sortKey)}\r\n      className={sortClass}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport './loading.styles.css';\r\n\r\nconst Loading = () => {\r\n  return(\r\n    <div>Loading ...</div>\r\n  )\r\n}\r\n\r\nexport default Loading;","/**\r\n * Default Parameters for querying the API endpoint\r\n */\r\n\r\nexport const Api = {\r\n  DEFAULT_QUERY: 'react',\r\n  DEFAULT_HPP: '25',\r\n  PATH_BASE:'https://hn.algolia.com/api/v1',\r\n  PATH_SEARCH: '/search',\r\n  PARAM_SEARCH: 'query=',\r\n  PARAM_PAGE: 'page=',\r\n  PARAM_HPP: 'hitsPerPage='\r\n}\r\n\r\n","export const updateSearchTopStoriesState = (hits, page) => (prevState) => {\r\n  const { searchKey, results } = prevState;\r\n      \r\n  const oldHits = results && results[searchKey]\r\n  ? results[searchKey].hits\r\n  : [];\r\n  const updatedHits = [...oldHits, ...hits];\r\n\r\n  return {\r\n    results: { \r\n      ...results,\r\n      [searchKey]: {hits: updatedHits, page} \r\n    },\r\n    isLoading: false \r\n  };\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n/* if (module.hot) {\n  module.hot.accept();\n}\n */\n\n"],"sourceRoot":""}